// Mocks generated by Mockito 5.4.6 from annotations
// in mvi_base/test/todos_interactor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todos_repository_core/src/reactive_repository.dart' as _i2;
import 'package:todos_repository_core/src/todo_entity.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [ReactiveTodosRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReactiveTodosRepository extends _i1.Mock
    implements _i2.ReactiveTodosRepository {
  @override
  _i3.Future<void> addNewTodo(_i4.TodoEntity? todo) =>
      (super.noSuchMethod(
            Invocation.method(#addNewTodo, [todo]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteTodo(List<String>? idList) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodo, [idList]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.TodoEntity>> todos() =>
      (super.noSuchMethod(
            Invocation.method(#todos, []),
            returnValue: _i3.Stream<List<_i4.TodoEntity>>.empty(),
            returnValueForMissingStub: _i3.Stream<List<_i4.TodoEntity>>.empty(),
          )
          as _i3.Stream<List<_i4.TodoEntity>>);

  @override
  _i3.Future<void> updateTodo(_i4.TodoEntity? todo) =>
      (super.noSuchMethod(
            Invocation.method(#updateTodo, [todo]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
