// Mocks generated by Mockito 5.4.6 from annotations
// in todos_repository_local_storage/test/repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:todos_repository_core/todos_repository_core.dart' as _i6;
import 'package:todos_repository_local_storage/src/file_storage.dart' as _i3;
import 'package:todos_repository_local_storage/src/web_client.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDirectory_0 extends _i1.SmartFake implements _i2.Directory {
  _FakeDirectory_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_1 extends _i1.SmartFake implements _i2.File {
  _FakeFile_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileSystemEntity_2 extends _i1.SmartFake
    implements _i2.FileSystemEntity {
  _FakeFileSystemEntity_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_3 extends _i1.SmartFake implements Duration {
  _FakeDuration_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FileStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileStorage extends _i1.Mock implements _i3.FileStorage {
  @override
  String get tag => (super.noSuchMethod(
        Invocation.getter(#tag),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#tag),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#tag),
        ),
      ) as String);

  @override
  _i5.Future<_i2.Directory> Function() get getDirectory => (super.noSuchMethod(
        Invocation.getter(#getDirectory),
        returnValue: () => _i5.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.getter(#getDirectory),
        )),
        returnValueForMissingStub: () =>
            _i5.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.getter(#getDirectory),
        )),
      ) as _i5.Future<_i2.Directory> Function());

  @override
  _i5.Future<List<_i6.TodoEntity>> loadTodos() => (super.noSuchMethod(
        Invocation.method(
          #loadTodos,
          [],
        ),
        returnValue: _i5.Future<List<_i6.TodoEntity>>.value(<_i6.TodoEntity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.TodoEntity>>.value(<_i6.TodoEntity>[]),
      ) as _i5.Future<List<_i6.TodoEntity>>);

  @override
  _i5.Future<_i2.File> saveTodos(List<_i6.TodoEntity>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTodos,
          [todos],
        ),
        returnValue: _i5.Future<_i2.File>.value(_FakeFile_1(
          this,
          Invocation.method(
            #saveTodos,
            [todos],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.File>.value(_FakeFile_1(
          this,
          Invocation.method(
            #saveTodos,
            [todos],
          ),
        )),
      ) as _i5.Future<_i2.File>);

  @override
  _i5.Future<_i2.FileSystemEntity> clean() => (super.noSuchMethod(
        Invocation.method(
          #clean,
          [],
        ),
        returnValue:
            _i5.Future<_i2.FileSystemEntity>.value(_FakeFileSystemEntity_2(
          this,
          Invocation.method(
            #clean,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.FileSystemEntity>.value(_FakeFileSystemEntity_2(
          this,
          Invocation.method(
            #clean,
            [],
          ),
        )),
      ) as _i5.Future<_i2.FileSystemEntity>);
}

/// A class which mocks [WebClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebClient extends _i1.Mock implements _i7.WebClient {
  @override
  Duration get delay => (super.noSuchMethod(
        Invocation.getter(#delay),
        returnValue: _FakeDuration_3(
          this,
          Invocation.getter(#delay),
        ),
        returnValueForMissingStub: _FakeDuration_3(
          this,
          Invocation.getter(#delay),
        ),
      ) as Duration);

  @override
  _i5.Future<List<_i6.TodoEntity>> loadTodos() => (super.noSuchMethod(
        Invocation.method(
          #loadTodos,
          [],
        ),
        returnValue: _i5.Future<List<_i6.TodoEntity>>.value(<_i6.TodoEntity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.TodoEntity>>.value(<_i6.TodoEntity>[]),
      ) as _i5.Future<List<_i6.TodoEntity>>);

  @override
  _i5.Future<bool> saveTodos(List<_i6.TodoEntity>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTodos,
          [todos],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
