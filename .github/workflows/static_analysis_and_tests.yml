name: Static Analysis & Tests

on:
  pull_request:
  push:
    branches:
      - main
      - refresh

jobs:
  todos_repository_local_storage:
    name: Todos Repository Local Storage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Static Analysis & Tests
        uses: ./.github/actions/flutter_analysis_and_tests
        with:
          working-directory: ./todos_repository_local_storage
          run-integration-tests: false
  vanilla:
    name: Vanilla
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Static Analysis & Tests
        uses: ./.github/actions/flutter_analysis_and_tests
        with:
          working-directory: ./vanilla
  inherited_widget:
    name: Inherited Widget
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Static Analysis & Tests
        uses: ./.github/actions/flutter_analysis_and_tests
        with:
          working-directory: ./inherited_widget
  read_coverage:
    name: Read Combined Coverage Files
    runs-on: ubuntu-latest
    needs: [todos_repository_local_storage, vanilla, inherited_widget]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: List coverage files
        run: |
          echo "Looking for coverage files in downloaded artifacts..."
          find . -name "*.info" -type f | head -20
          echo "---"
          ls -la coverage-lcov-*/ || echo "No coverage directories found"
      - name: Show coverage files content
        run: |
          for dir in coverage-lcov-*/; do
            if [ -d "$dir" ]; then
              echo "==== Contents of $dir ===="
              ls -la "$dir"
              for f in "$dir"*.info; do
                if [ -f "$f" ]; then
                  echo "==== $f ===="
                  cat "$f"
                fi
              done
            fi
          done || echo "No coverage files to show"
